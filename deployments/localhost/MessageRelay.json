{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "MessageRelay__AddressAlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__InvalidMessage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__InvalidUsername",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__NoMessage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__NoPublicKey",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__NoUser",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__UsernameAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        }
      ],
      "name": "changeUserPublicKey",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "fromUsername",
          "type": "string"
        }
      ],
      "name": "deleteMessageFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "fromUsername",
          "type": "string"
        }
      ],
      "name": "getMessage",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "content",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct MessageRelay.Message",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        }
      ],
      "name": "getPublicKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUsername",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "fromUsername",
          "type": "string"
        }
      ],
      "name": "hasMessageFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "toUsername",
          "type": "string"
        }
      ],
      "name": "hasMessageTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        }
      ],
      "name": "sendMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x64dc4da608cc277b02b6284170d54ef33c789e8766cfa57dd1cddc42856776d8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1382744",
    "logsBloom": "0x
    "blockHash": "0x3b9f931332c7159c1ce38b1d9954babd6236121a90ae22c9f8c2906d41cc6d3b",
    "transactionHash": "0x64dc4da608cc277b02b6284170d54ef33c789e8766cfa57dd1cddc42856776d8",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1382744",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c78a8c42fd16abecf0fa16c9b10a21a8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MessageRelay__AddressAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__InvalidMessage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__InvalidUsername\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__NoMessage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__NoPublicKey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__NoUser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__UsernameAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"publicKey\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"publicKey\",\"type\":\"string\"}],\"name\":\"changeUserPublicKey\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"fromUsername\",\"type\":\"string\"}],\"name\":\"deleteMessageFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"fromUsername\",\"type\":\"string\"}],\"name\":\"getMessage\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct MessageRelay.Message\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"getPublicKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUsername\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"fromUsername\",\"type\":\"string\"}],\"name\":\"hasMessageFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toUsername\",\"type\":\"string\"}],\"name\":\"hasMessageTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MessageRelay.sol\":\"MessageRelay\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MessageRelay.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"./Validator.sol\\\";\\n\\nerror MessageRelay__UsernameAlreadyExists();\\nerror MessageRelay__AddressAlreadyRegistered();\\nerror MessageRelay__InvalidUsername();\\nerror MessageRelay__NoUser();\\nerror MessageRelay__NoPublicKey();\\nerror MessageRelay__NoMessage();\\nerror MessageRelay__InvalidMessage();\\n\\ncontract MessageRelay {\\n    struct Message {\\n        string content;\\n        uint256 createdAt;\\n    }\\n\\n    mapping(string => address) private usernameToAddress;\\n    mapping(address => string) private addressToUsername;\\n    mapping(string => string) private usernameToPublicKey;\\n    mapping(address => mapping(address => Message))\\n        private userAddressToMessage;\\n\\n    function addUser(string memory username, string memory publicKey) public {\\n        if (!Validator.validateUsername(username)) {\\n            revert MessageRelay__InvalidUsername();\\n        }\\n\\n        string memory addressUsername = addressToUsername[msg.sender];\\n        if (bytes(addressUsername).length != 0) {\\n            revert MessageRelay__AddressAlreadyRegistered();\\n        }\\n\\n        address userAddress = usernameToAddress[username];\\n        if (userAddress != address(0x0)) {\\n            revert MessageRelay__UsernameAlreadyExists();\\n        }\\n\\n        usernameToAddress[username] = msg.sender;\\n        addressToUsername[msg.sender] = username;\\n        usernameToPublicKey[username] = publicKey;\\n    }\\n\\n    function changeUserPublicKey(string memory publicKey) public payable {\\n        string memory username = getUsername();\\n        usernameToPublicKey[username] = publicKey;\\n    }\\n\\n    function getUsername() public view returns (string memory) {\\n        string memory username = addressToUsername[msg.sender];\\n        if (bytes(username).length == 0) {\\n            revert MessageRelay__NoUser();\\n        }\\n        return username;\\n    }\\n\\n    function getUserAddress(string memory username)\\n        private\\n        view\\n        returns (address)\\n    {\\n        address userAddress = usernameToAddress[username];\\n        if (userAddress == address(0x0)) {\\n            revert MessageRelay__NoUser();\\n        }\\n        return userAddress;\\n    }\\n\\n    function getPublicKey(string memory username)\\n        public\\n        view\\n        returns (string memory)\\n    {\\n        string memory publicKey = usernameToPublicKey[username];\\n        if (bytes(publicKey).length == 0) {\\n            revert MessageRelay__NoPublicKey();\\n        }\\n        return publicKey;\\n    }\\n\\n    function sendMessage(string memory username, string memory content) public {\\n        if (!Validator.validateMessage(content)) {\\n            revert MessageRelay__InvalidMessage();\\n        }\\n\\n        address receiverAddress = getUserAddress(username);\\n        userAddressToMessage[receiverAddress][msg.sender] = Message(\\n            content,\\n            block.timestamp * 1000\\n        );\\n    }\\n\\n    function getMessage(string memory fromUsername)\\n        public\\n        view\\n        returns (Message memory)\\n    {\\n        address from = getUserAddress(fromUsername);\\n        Message memory message = userAddressToMessage[msg.sender][from];\\n        if (bytes(message.content).length == 0) {\\n            revert MessageRelay__NoMessage();\\n        }\\n\\n        return message;\\n    }\\n\\n    function deleteMessageFrom(string memory fromUsername) public payable {\\n        address from = getUserAddress(fromUsername);\\n        Message memory message = userAddressToMessage[msg.sender][from];\\n        if (bytes(message.content).length == 0) {\\n            revert MessageRelay__NoMessage();\\n        }\\n        delete userAddressToMessage[msg.sender][from];\\n    }\\n\\n    function hasMessageFrom(string memory fromUsername)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        address from = getUserAddress(fromUsername);\\n        Message memory message = userAddressToMessage[msg.sender][from];\\n        return bytes(message.content).length > 0;\\n    }\\n\\n    function hasMessageTo(string memory toUsername) public view returns (bool) {\\n        address to = getUserAddress(toUsername);\\n        Message memory message = userAddressToMessage[to][msg.sender];\\n        return bytes(message.content).length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x474a92410bd58502207c47d626457d5259b557f881ecab81c948ddcd4b8aad81\",\"license\":\"MIT\"},\"contracts/Validator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nlibrary Validator {\\n    function validateUsername(string memory username)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        bytes memory usernameBytes = bytes(username);\\n        if (usernameBytes.length > 256 || usernameBytes.length < 4) {\\n            return false;\\n        }\\n\\n        bool hasAlphaNumeric = false;\\n\\n        for (uint256 i; i < usernameBytes.length; i++) {\\n            bytes1 char = usernameBytes[i];\\n\\n            if (\\n                !(char >= 0x30 && char <= 0x39) && //9-0\\n                !(char >= 0x41 && char <= 0x5A) && //A-Z\\n                !(char >= 0x61 && char <= 0x7A) && //a-z\\n                char != 0x5F // _\\n            ) {\\n                return false;\\n            }\\n\\n            if (char != 0x5F && !hasAlphaNumeric) {\\n                hasAlphaNumeric = true;\\n            }\\n        }\\n\\n        return hasAlphaNumeric;\\n    }\\n\\n    function validateMessage(string memory message)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        return bytes(message).length > 0 && bytes(message).length <= 1024;\\n    }\\n}\\n\",\"keccak256\":\"0xb9305b2fba66d77b5bbc51dab41662cbc2ab5890a33ca1074bac951005c4ccfc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611823806100206000396000f3fe6080604052600436106100865760003560e01c80634a4d1a69116100595780634a4d1a6914610136578063681f3e6d1461015257806378bd6ab41461017d578063bff90821146101ba578063ed780448146101f757610086565b8063079eaf341461008b5780630cc4e8d8146100b4578063325d27ee146100f1578063467fba0f1461010d575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906113d5565b610234565b005b3480156100c057600080fd5b506100db60048036038101906100d6919061144d565b61050c565b6040516100e89190611574565b60405180910390f35b61010b6004803603810190610106919061144d565b610692565b005b34801561011957600080fd5b50610134600480360381019061012f91906113d5565b6106d5565b005b610150600480360381019061014b919061144d565b6107ee565b005b34801561015e57600080fd5b506101676109fe565b60405161017491906115e0565b60405180910390f35b34801561018957600080fd5b506101a4600480360381019061019f919061144d565b610b0f565b6040516101b1919061161d565b60405180910390f35b3480156101c657600080fd5b506101e160048036038101906101dc919061144d565b610c56565b6040516101ee91906115e0565b60405180910390f35b34801561020357600080fd5b5061021e6004803603810190610219919061144d565b610d48565b60405161022b919061161d565b60405180910390f35b61023d82610e8f565b610273576040517ff93d5b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546102bf90611667565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb90611667565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b50505050509050600081511461037a576040517f7eb8190b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808460405161038b91906116d5565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610422576040517f2435647e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360008560405161043391906116d5565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906104d292919061117e565b50826002856040516104e491906116d5565b9081526020016040518091039020908051906020019061050592919061117e565b5050505050565b610514611204565b600061051f836110ae565b90506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546105ba90611667565b80601f01602080910402602001604051908101604052809291908181526020018280546105e690611667565b80156106335780601f1061060857610100808354040283529160200191610633565b820191906000526020600020905b81548152906001019060200180831161061657829003601f168201915b50505050508152602001600182015481525050905060008160000151511415610688576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8092505050919050565b600061069c6109fe565b9050816002826040516106af91906116d5565b908152602001604051809103902090805190602001906106d092919061117e565b505050565b6106de81611162565b610714576040517f4cd3f55000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061071f836110ae565b905060405180604001604052808381526020016103e842610740919061171b565b815250600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906107db92919061117e565b5060208201518160010155905050505050565b60006107f9826110ae565b90506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201805461089490611667565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090611667565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b50505050508152602001600182015481525050905060008160000151511415610962576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006109ef919061121e565b60018201600090555050505050565b60606000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610a4c90611667565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7890611667565b8015610ac55780601f10610a9a57610100808354040283529160200191610ac5565b820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b50505050509050600081511415610b08576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8091505090565b600080610b1b836110ae565b90506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082018054610bb690611667565b80601f0160208091040260200160405190810160405280929190818152602001828054610be290611667565b8015610c2f5780601f10610c0457610100808354040283529160200191610c2f565b820191906000526020600020905b815481529060010190602001808311610c1257829003601f168201915b50505050508152602001600182015481525050905060008160000151511192505050919050565b60606000600283604051610c6a91906116d5565b90815260200160405180910390208054610c8390611667565b80601f0160208091040260200160405190810160405280929190818152602001828054610caf90611667565b8015610cfc5780601f10610cd157610100808354040283529160200191610cfc565b820191906000526020600020905b815481529060010190602001808311610cdf57829003601f168201915b50505050509050600081511415610d3f576040517f85b0bad200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080610d54836110ae565b90506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082018054610def90611667565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1b90611667565b8015610e685780601f10610e3d57610100808354040283529160200191610e68565b820191906000526020600020905b815481529060010190602001808311610e4b57829003601f168201915b50505050508152602001600182015481525050905060008160000151511192505050919050565b60008082905061010081511180610ea7575060048151105b15610eb65760009150506110a9565b6000805b82518110156110a2576000838281518110610ed857610ed7611775565b5b602001015160f81c60f81b9050603060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610f415750603960f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b158015610fa75750604160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610fa55750605a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b801561100c5750606160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015801561100a5750607a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b801561103e5750605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b156110505760009450505050506110a9565b605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158015611084575082155b1561108e57600192505b50808061109a906117a4565b915050610eba565b5080925050505b919050565b6000806000836040516110c191906116d5565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611159576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b60008082511180156111775750610400825111155b9050919050565b82805461118a90611667565b90600052602060002090601f0160209004810192826111ac57600085556111f3565b82601f106111c557805160ff19168380011785556111f3565b828001600101855582156111f3579182015b828111156111f25782518255916020019190600101906111d7565b5b509050611200919061125e565b5090565b604051806040016040528060608152602001600081525090565b50805461122a90611667565b6000825580601f1061123c575061125b565b601f01602090049060005260206000209081019061125a919061125e565b5b50565b5b8082111561127757600081600090555060010161125f565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112e282611299565b810181811067ffffffffffffffff82111715611301576113006112aa565b5b80604052505050565b600061131461127b565b905061132082826112d9565b919050565b600067ffffffffffffffff8211156113405761133f6112aa565b5b61134982611299565b9050602081019050919050565b82818337600083830152505050565b600061137861137384611325565b61130a565b90508281526020810184848401111561139457611393611294565b5b61139f848285611356565b509392505050565b600082601f8301126113bc576113bb61128f565b5b81356113cc848260208601611365565b91505092915050565b600080604083850312156113ec576113eb611285565b5b600083013567ffffffffffffffff81111561140a5761140961128a565b5b611416858286016113a7565b925050602083013567ffffffffffffffff8111156114375761143661128a565b5b611443858286016113a7565b9150509250929050565b60006020828403121561146357611462611285565b5b600082013567ffffffffffffffff8111156114815761148061128a565b5b61148d848285016113a7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114d05780820151818401526020810190506114b5565b838111156114df576000848401525b50505050565b60006114f082611496565b6114fa81856114a1565b935061150a8185602086016114b2565b61151381611299565b840191505092915050565b6000819050919050565b6115318161151e565b82525050565b6000604083016000830151848203600086015261155482826114e5565b91505060208301516115696020860182611528565b508091505092915050565b6000602082019050818103600083015261158e8184611537565b905092915050565b600082825260208201905092915050565b60006115b282611496565b6115bc8185611596565b93506115cc8185602086016114b2565b6115d581611299565b840191505092915050565b600060208201905081810360008301526115fa81846115a7565b905092915050565b60008115159050919050565b61161781611602565b82525050565b6000602082019050611632600083018461160e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061167f57607f821691505b6020821081141561169357611692611638565b5b50919050565b600081905092915050565b60006116af82611496565b6116b98185611699565b93506116c98185602086016114b2565b80840191505092915050565b60006116e182846116a4565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117268261151e565b91506117318361151e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561176a576117696116ec565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006117af8261151e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117e2576117e16116ec565b5b60018201905091905056fea26469706673582212208ba77dcb13b7ab19c175191e00083586bd22d549d0f32c2939d3eed167ca84f764736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80634a4d1a69116100595780634a4d1a6914610136578063681f3e6d1461015257806378bd6ab41461017d578063bff90821146101ba578063ed780448146101f757610086565b8063079eaf341461008b5780630cc4e8d8146100b4578063325d27ee146100f1578063467fba0f1461010d575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906113d5565b610234565b005b3480156100c057600080fd5b506100db60048036038101906100d6919061144d565b61050c565b6040516100e89190611574565b60405180910390f35b61010b6004803603810190610106919061144d565b610692565b005b34801561011957600080fd5b50610134600480360381019061012f91906113d5565b6106d5565b005b610150600480360381019061014b919061144d565b6107ee565b005b34801561015e57600080fd5b506101676109fe565b60405161017491906115e0565b60405180910390f35b34801561018957600080fd5b506101a4600480360381019061019f919061144d565b610b0f565b6040516101b1919061161d565b60405180910390f35b3480156101c657600080fd5b506101e160048036038101906101dc919061144d565b610c56565b6040516101ee91906115e0565b60405180910390f35b34801561020357600080fd5b5061021e6004803603810190610219919061144d565b610d48565b60405161022b919061161d565b60405180910390f35b61023d82610e8f565b610273576040517ff93d5b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546102bf90611667565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb90611667565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b50505050509050600081511461037a576040517f7eb8190b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808460405161038b91906116d5565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610422576040517f2435647e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360008560405161043391906116d5565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906104d292919061117e565b50826002856040516104e491906116d5565b9081526020016040518091039020908051906020019061050592919061117e565b5050505050565b610514611204565b600061051f836110ae565b90506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546105ba90611667565b80601f01602080910402602001604051908101604052809291908181526020018280546105e690611667565b80156106335780601f1061060857610100808354040283529160200191610633565b820191906000526020600020905b81548152906001019060200180831161061657829003601f168201915b50505050508152602001600182015481525050905060008160000151511415610688576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8092505050919050565b600061069c6109fe565b9050816002826040516106af91906116d5565b908152602001604051809103902090805190602001906106d092919061117e565b505050565b6106de81611162565b610714576040517f4cd3f55000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061071f836110ae565b905060405180604001604052808381526020016103e842610740919061171b565b815250600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906107db92919061117e565b5060208201518160010155905050505050565b60006107f9826110ae565b90506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201805461089490611667565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090611667565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b50505050508152602001600182015481525050905060008160000151511415610962576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006109ef919061121e565b60018201600090555050505050565b60606000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610a4c90611667565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7890611667565b8015610ac55780601f10610a9a57610100808354040283529160200191610ac5565b820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b50505050509050600081511415610b08576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8091505090565b600080610b1b836110ae565b90506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082018054610bb690611667565b80601f0160208091040260200160405190810160405280929190818152602001828054610be290611667565b8015610c2f5780601f10610c0457610100808354040283529160200191610c2f565b820191906000526020600020905b815481529060010190602001808311610c1257829003601f168201915b50505050508152602001600182015481525050905060008160000151511192505050919050565b60606000600283604051610c6a91906116d5565b90815260200160405180910390208054610c8390611667565b80601f0160208091040260200160405190810160405280929190818152602001828054610caf90611667565b8015610cfc5780601f10610cd157610100808354040283529160200191610cfc565b820191906000526020600020905b815481529060010190602001808311610cdf57829003601f168201915b50505050509050600081511415610d3f576040517f85b0bad200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080610d54836110ae565b90506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082018054610def90611667565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1b90611667565b8015610e685780601f10610e3d57610100808354040283529160200191610e68565b820191906000526020600020905b815481529060010190602001808311610e4b57829003601f168201915b50505050508152602001600182015481525050905060008160000151511192505050919050565b60008082905061010081511180610ea7575060048151105b15610eb65760009150506110a9565b6000805b82518110156110a2576000838281518110610ed857610ed7611775565b5b602001015160f81c60f81b9050603060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610f415750603960f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b158015610fa75750604160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610fa55750605a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b801561100c5750606160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015801561100a5750607a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b801561103e5750605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b156110505760009450505050506110a9565b605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158015611084575082155b1561108e57600192505b50808061109a906117a4565b915050610eba565b5080925050505b919050565b6000806000836040516110c191906116d5565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611159576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b60008082511180156111775750610400825111155b9050919050565b82805461118a90611667565b90600052602060002090601f0160209004810192826111ac57600085556111f3565b82601f106111c557805160ff19168380011785556111f3565b828001600101855582156111f3579182015b828111156111f25782518255916020019190600101906111d7565b5b509050611200919061125e565b5090565b604051806040016040528060608152602001600081525090565b50805461122a90611667565b6000825580601f1061123c575061125b565b601f01602090049060005260206000209081019061125a919061125e565b5b50565b5b8082111561127757600081600090555060010161125f565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112e282611299565b810181811067ffffffffffffffff82111715611301576113006112aa565b5b80604052505050565b600061131461127b565b905061132082826112d9565b919050565b600067ffffffffffffffff8211156113405761133f6112aa565b5b61134982611299565b9050602081019050919050565b82818337600083830152505050565b600061137861137384611325565b61130a565b90508281526020810184848401111561139457611393611294565b5b61139f848285611356565b509392505050565b600082601f8301126113bc576113bb61128f565b5b81356113cc848260208601611365565b91505092915050565b600080604083850312156113ec576113eb611285565b5b600083013567ffffffffffffffff81111561140a5761140961128a565b5b611416858286016113a7565b925050602083013567ffffffffffffffff8111156114375761143661128a565b5b611443858286016113a7565b9150509250929050565b60006020828403121561146357611462611285565b5b600082013567ffffffffffffffff8111156114815761148061128a565b5b61148d848285016113a7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114d05780820151818401526020810190506114b5565b838111156114df576000848401525b50505050565b60006114f082611496565b6114fa81856114a1565b935061150a8185602086016114b2565b61151381611299565b840191505092915050565b6000819050919050565b6115318161151e565b82525050565b6000604083016000830151848203600086015261155482826114e5565b91505060208301516115696020860182611528565b508091505092915050565b6000602082019050818103600083015261158e8184611537565b905092915050565b600082825260208201905092915050565b60006115b282611496565b6115bc8185611596565b93506115cc8185602086016114b2565b6115d581611299565b840191505092915050565b600060208201905081810360008301526115fa81846115a7565b905092915050565b60008115159050919050565b61161781611602565b82525050565b6000602082019050611632600083018461160e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061167f57607f821691505b6020821081141561169357611692611638565b5b50919050565b600081905092915050565b60006116af82611496565b6116b98185611699565b93506116c98185602086016114b2565b80840191505092915050565b60006116e182846116a4565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117268261151e565b91506117318361151e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561176a576117696116ec565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006117af8261151e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117e2576117e16116ec565b5b60018201905091905056fea26469706673582212208ba77dcb13b7ab19c175191e00083586bd22d549d0f32c2939d3eed167ca84f764736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 25,
        "contract": "contracts/MessageRelay.sol:MessageRelay",
        "label": "usernameToAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 29,
        "contract": "contracts/MessageRelay.sol:MessageRelay",
        "label": "addressToUsername",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 33,
        "contract": "contracts/MessageRelay.sol:MessageRelay",
        "label": "usernameToPublicKey",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/MessageRelay.sol:MessageRelay",
        "label": "userAddressToMessage",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Message)21_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(Message)21_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct MessageRelay.Message))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Message)21_storage)"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Message)21_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct MessageRelay.Message)",
        "numberOfBytes": "32",
        "value": "t_struct(Message)21_storage"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Message)21_storage": {
        "encoding": "inplace",
        "label": "struct MessageRelay.Message",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/MessageRelay.sol:MessageRelay",
            "label": "content",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 20,
            "contract": "contracts/MessageRelay.sol:MessageRelay",
            "label": "createdAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "MessageRelay__AddressAlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__InvalidMessage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__InvalidUsername",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__NoMessage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__NoPublicKey",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__NoUser",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageRelay__UsernameAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        }
      ],
      "name": "changeUserPublicKey",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "fromUsername",
          "type": "string"
        }
      ],
      "name": "deleteMessageFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "fromUsername",
          "type": "string"
        }
      ],
      "name": "getMessage",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "content",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct MessageRelay.Message",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        }
      ],
      "name": "getPublicKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUsername",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "fromUsername",
          "type": "string"
        }
      ],
      "name": "hasMessageFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "toUsername",
          "type": "string"
        }
      ],
      "name": "hasMessageTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        }
      ],
      "name": "sendMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0dd421d479288db2533f7d2dd79126d0b5b434440fae252622195f2a1685bba1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1444034",
    "logsBloom": "0x
    "blockHash": "0x055fb37dd7611f269493ab4af824759510f4f07caa4b24014be075641b328b59",
    "transactionHash": "0x0dd421d479288db2533f7d2dd79126d0b5b434440fae252622195f2a1685bba1",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1444034",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9a0a91eb2806d1d065101a10a88a202f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MessageRelay__AddressAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__InvalidMessage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__InvalidUsername\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__NoMessage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__NoPublicKey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__NoUser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageRelay__UsernameAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"publicKey\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"publicKey\",\"type\":\"string\"}],\"name\":\"changeUserPublicKey\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"fromUsername\",\"type\":\"string\"}],\"name\":\"deleteMessageFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"fromUsername\",\"type\":\"string\"}],\"name\":\"getMessage\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct MessageRelay.Message\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"getPublicKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUsername\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"fromUsername\",\"type\":\"string\"}],\"name\":\"hasMessageFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"toUsername\",\"type\":\"string\"}],\"name\":\"hasMessageTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MessageRelay.sol\":\"MessageRelay\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MessageRelay.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"./Validator.sol\\\";\\n\\nerror MessageRelay__UsernameAlreadyExists();\\nerror MessageRelay__AddressAlreadyRegistered();\\nerror MessageRelay__InvalidUsername();\\nerror MessageRelay__NoUser();\\nerror MessageRelay__NoPublicKey();\\nerror MessageRelay__NoMessage();\\nerror MessageRelay__InvalidMessage();\\n\\ncontract MessageRelay {\\n    struct Message {\\n        string content;\\n        uint256 createdAt;\\n    }\\n\\n    mapping(string => address) private usernameToAddress;\\n    mapping(address => string) private addressToUsername;\\n    mapping(string => string) private usernameToPublicKey;\\n    mapping(address => mapping(address => Message))\\n        private userAddressToMessage;\\n\\n    function addUser(\\n        address userAddress,\\n        string memory username,\\n        string memory publicKey\\n    ) public {\\n        if (!Validator.validateUsername(username)) {\\n            revert MessageRelay__InvalidUsername();\\n        }\\n\\n        string memory addressUsername = addressToUsername[userAddress];\\n        if (bytes(addressUsername).length != 0) {\\n            revert MessageRelay__AddressAlreadyRegistered();\\n        }\\n\\n        address usernameAddress = usernameToAddress[username];\\n        if (usernameAddress != address(0x0)) {\\n            revert MessageRelay__UsernameAlreadyExists();\\n        }\\n\\n        usernameToAddress[username] = userAddress;\\n        addressToUsername[userAddress] = username;\\n        usernameToPublicKey[username] = publicKey;\\n    }\\n\\n    function changeUserPublicKey(address userAddress, string memory publicKey)\\n        public\\n        payable\\n    {\\n        string memory username = getUsername(userAddress);\\n        usernameToPublicKey[username] = publicKey;\\n    }\\n\\n    function getUsername(address userAddress)\\n        public\\n        view\\n        returns (string memory)\\n    {\\n        string memory username = addressToUsername[userAddress];\\n        if (bytes(username).length == 0) {\\n            revert MessageRelay__NoUser();\\n        }\\n        return username;\\n    }\\n\\n    function getUserAddress(string memory username)\\n        private\\n        view\\n        returns (address)\\n    {\\n        address userAddress = usernameToAddress[username];\\n        if (userAddress == address(0x0)) {\\n            revert MessageRelay__NoUser();\\n        }\\n        return userAddress;\\n    }\\n\\n    function getPublicKey(string memory username)\\n        public\\n        view\\n        returns (string memory)\\n    {\\n        string memory publicKey = usernameToPublicKey[username];\\n        if (bytes(publicKey).length == 0) {\\n            revert MessageRelay__NoPublicKey();\\n        }\\n        return publicKey;\\n    }\\n\\n    function sendMessage(\\n        address userAddress,\\n        string memory username,\\n        string memory content\\n    ) public {\\n        if (!Validator.validateMessage(content)) {\\n            revert MessageRelay__InvalidMessage();\\n        }\\n\\n        address receiverAddress = getUserAddress(username);\\n        Message memory message = Message(content, block.timestamp * 1000);\\n        userAddressToMessage[receiverAddress][userAddress] = message;\\n    }\\n\\n    function getMessage(address userAddress, string memory fromUsername)\\n        public\\n        view\\n        returns (Message memory)\\n    {\\n        address from = getUserAddress(fromUsername);\\n        Message memory message = userAddressToMessage[userAddress][from];\\n        if (bytes(message.content).length == 0) {\\n            revert MessageRelay__NoMessage();\\n        }\\n\\n        return message;\\n    }\\n\\n    function deleteMessageFrom(address userAddress, string memory fromUsername)\\n        public\\n        payable\\n    {\\n        address from = getUserAddress(fromUsername);\\n        Message memory message = userAddressToMessage[userAddress][from];\\n        if (bytes(message.content).length == 0) {\\n            revert MessageRelay__NoMessage();\\n        }\\n        delete userAddressToMessage[userAddress][from];\\n    }\\n\\n    function hasMessageFrom(address userAddress, string memory fromUsername)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        address from = getUserAddress(fromUsername);\\n        Message memory message = userAddressToMessage[userAddress][from];\\n        return bytes(message.content).length > 0;\\n    }\\n\\n    function hasMessageTo(address userAddress, string memory toUsername)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        address to = getUserAddress(toUsername);\\n        Message memory message = userAddressToMessage[to][userAddress];\\n        return bytes(message.content).length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x4266315a80129405fbe34b361909c692795801363bf219177ca3b316ac51de9a\",\"license\":\"MIT\"},\"contracts/Validator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nlibrary Validator {\\n    function validateUsername(string memory username)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        bytes memory usernameBytes = bytes(username);\\n        if (usernameBytes.length > 256 || usernameBytes.length < 4) {\\n            return false;\\n        }\\n\\n        bool hasAlphaNumeric = false;\\n\\n        for (uint256 i; i < usernameBytes.length; i++) {\\n            bytes1 char = usernameBytes[i];\\n\\n            if (\\n                !(char >= 0x30 && char <= 0x39) && //9-0\\n                !(char >= 0x41 && char <= 0x5A) && //A-Z\\n                !(char >= 0x61 && char <= 0x7A) && //a-z\\n                char != 0x5F // _\\n            ) {\\n                return false;\\n            }\\n\\n            if (char != 0x5F && !hasAlphaNumeric) {\\n                hasAlphaNumeric = true;\\n            }\\n        }\\n\\n        return hasAlphaNumeric;\\n    }\\n\\n    function validateMessage(string memory message)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        return bytes(message).length > 0 && bytes(message).length <= 1024;\\n    }\\n}\\n\",\"keccak256\":\"0xb9305b2fba66d77b5bbc51dab41662cbc2ab5890a33ca1074bac951005c4ccfc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061193f806100206000396000f3fe6080604052600436106100865760003560e01c8063999d849611610059578063999d84961461014a578063b5ff97cc14610166578063bff90821146101a3578063ce43c032146101e0578063d7554a681461021d57610086565b80630d1317ad1461008b57806310ddb74a146100a75780631b95c00e146100e45780636fb6df4314610121575b600080fd5b6100a560048036038101906100a09190611455565b610246565b005b3480156100b357600080fd5b506100ce60048036038101906100c99190611455565b610457565b6040516100db91906114cc565b60405180910390f35b3480156100f057600080fd5b5061010b60048036038101906101069190611455565b61059f565b60405161011891906114cc565b60405180910390f35b34801561012d57600080fd5b50610148600480360381019061014391906114e7565b6106e7565b005b610164600480360381019061015f9190611455565b610807565b005b34801561017257600080fd5b5061018d60048036038101906101889190611455565b61084c565b60405161019a9190611650565b60405180910390f35b3480156101af57600080fd5b506101ca60048036038101906101c59190611672565b6109d3565b6040516101d79190611705565b60405180910390f35b3480156101ec57600080fd5b5061020760048036038101906102029190611727565b610ac5565b6040516102149190611705565b60405180910390f35b34801561022957600080fd5b50610244600480360381019061023f91906114e7565b610bd8565b005b600061025182610eb1565b90506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546102ec90611783565b80601f016020809104026020016040519081016040528092919081815260200182805461031890611783565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081526020016001820154815250509050600081600001515114156103ba576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600061044791906111a0565b6001820160009055505050505050565b60008061046383610eb1565b90506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546104fe90611783565b80601f016020809104026020016040519081016040528092919081815260200182805461052a90611783565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050815260200160018201548152505090506000816000015151119250505092915050565b6000806105ab83610eb1565b90506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201805461064690611783565b80601f016020809104026020016040519081016040528092919081815260200182805461067290611783565b80156106bf5780601f10610694576101008083540402835291602001916106bf565b820191906000526020600020905b8154815290600101906020018083116106a257829003601f168201915b5050505050815260200160018201548152505090506000816000015151119250505092915050565b6106f081610f65565b610726576040517f4cd3f55000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061073183610eb1565b9050600060405180604001604052808481526020016103e84261075491906117e4565b815250905080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906107f29291906111e0565b50602082015181600101559050505050505050565b600061081283610ac5565b905081600282604051610825919061187a565b908152602001604051809103902090805190602001906108469291906111e0565b50505050565b610854611266565b600061085f83610eb1565b90506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546108fa90611783565b80601f016020809104026020016040519081016040528092919081815260200182805461092690611783565b80156109735780601f1061094857610100808354040283529160200191610973565b820191906000526020600020905b81548152906001019060200180831161095657829003601f168201915b505050505081526020016001820154815250509050600081600001515114156109c8576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b809250505092915050565b606060006002836040516109e7919061187a565b90815260200160405180910390208054610a0090611783565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2c90611783565b8015610a795780601f10610a4e57610100808354040283529160200191610a79565b820191906000526020600020905b815481529060010190602001808311610a5c57829003601f168201915b50505050509050600081511415610abc576040517f85b0bad200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610b1390611783565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3f90611783565b8015610b8c5780601f10610b6157610100808354040283529160200191610b8c565b820191906000526020600020905b815481529060010190602001808311610b6f57829003601f168201915b50505050509050600081511415610bcf576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b610be182610f81565b610c17576040517ff93d5b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610c6390611783565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8f90611783565b8015610cdc5780601f10610cb157610100808354040283529160200191610cdc565b820191906000526020600020905b815481529060010190602001808311610cbf57829003601f168201915b505050505090506000815114610d1e576040517f7eb8190b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008084604051610d2f919061187a565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610dc6576040517f2435647e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600085604051610dd7919061187a565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610e769291906111e0565b5082600285604051610e88919061187a565b90815260200160405180910390209080519060200190610ea99291906111e0565b505050505050565b600080600083604051610ec4919061187a565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f5c576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6000808251118015610f7a5750610400825111155b9050919050565b60008082905061010081511180610f99575060048151105b15610fa857600091505061119b565b6000805b8251811015611194576000838281518110610fca57610fc9611891565b5b602001015160f81c60f81b9050603060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156110335750603960f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1580156110995750604160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156110975750605a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b80156110fe5750606160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156110fc5750607a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b80156111305750605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561114257600094505050505061119b565b605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158015611176575082155b1561118057600192505b50808061118c906118c0565b915050610fac565b5080925050505b919050565b5080546111ac90611783565b6000825580601f106111be57506111dd565b601f0160209004906000526020600020908101906111dc9190611280565b5b50565b8280546111ec90611783565b90600052602060002090601f01602090048101928261120e5760008555611255565b82601f1061122757805160ff1916838001178555611255565b82800160010185558215611255579182015b82811115611254578251825591602001919060010190611239565b5b5090506112629190611280565b5090565b604051806040016040528060608152602001600081525090565b5b80821115611299576000816000905550600101611281565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112dc826112b1565b9050919050565b6112ec816112d1565b81146112f757600080fd5b50565b600081359050611309816112e3565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61136282611319565b810181811067ffffffffffffffff821117156113815761138061132a565b5b80604052505050565b600061139461129d565b90506113a08282611359565b919050565b600067ffffffffffffffff8211156113c0576113bf61132a565b5b6113c982611319565b9050602081019050919050565b82818337600083830152505050565b60006113f86113f3846113a5565b61138a565b90508281526020810184848401111561141457611413611314565b5b61141f8482856113d6565b509392505050565b600082601f83011261143c5761143b61130f565b5b813561144c8482602086016113e5565b91505092915050565b6000806040838503121561146c5761146b6112a7565b5b600061147a858286016112fa565b925050602083013567ffffffffffffffff81111561149b5761149a6112ac565b5b6114a785828601611427565b9150509250929050565b60008115159050919050565b6114c6816114b1565b82525050565b60006020820190506114e160008301846114bd565b92915050565b600080600060608486031215611500576114ff6112a7565b5b600061150e868287016112fa565b935050602084013567ffffffffffffffff81111561152f5761152e6112ac565b5b61153b86828701611427565b925050604084013567ffffffffffffffff81111561155c5761155b6112ac565b5b61156886828701611427565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156115ac578082015181840152602081019050611591565b838111156115bb576000848401525b50505050565b60006115cc82611572565b6115d6818561157d565b93506115e681856020860161158e565b6115ef81611319565b840191505092915050565b6000819050919050565b61160d816115fa565b82525050565b6000604083016000830151848203600086015261163082826115c1565b91505060208301516116456020860182611604565b508091505092915050565b6000602082019050818103600083015261166a8184611613565b905092915050565b600060208284031215611688576116876112a7565b5b600082013567ffffffffffffffff8111156116a6576116a56112ac565b5b6116b284828501611427565b91505092915050565b600082825260208201905092915050565b60006116d782611572565b6116e181856116bb565b93506116f181856020860161158e565b6116fa81611319565b840191505092915050565b6000602082019050818103600083015261171f81846116cc565b905092915050565b60006020828403121561173d5761173c6112a7565b5b600061174b848285016112fa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061179b57607f821691505b602082108114156117af576117ae611754565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117ef826115fa565b91506117fa836115fa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611833576118326117b5565b5b828202905092915050565b600081905092915050565b600061185482611572565b61185e818561183e565b935061186e81856020860161158e565b80840191505092915050565b60006118868284611849565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006118cb826115fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118fe576118fd6117b5565b5b60018201905091905056fea2646970667358221220fa4d192158026e0380279822b42c657ebc18748b51f2e3573deb2ad08aba7cbb64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063999d849611610059578063999d84961461014a578063b5ff97cc14610166578063bff90821146101a3578063ce43c032146101e0578063d7554a681461021d57610086565b80630d1317ad1461008b57806310ddb74a146100a75780631b95c00e146100e45780636fb6df4314610121575b600080fd5b6100a560048036038101906100a09190611455565b610246565b005b3480156100b357600080fd5b506100ce60048036038101906100c99190611455565b610457565b6040516100db91906114cc565b60405180910390f35b3480156100f057600080fd5b5061010b60048036038101906101069190611455565b61059f565b60405161011891906114cc565b60405180910390f35b34801561012d57600080fd5b50610148600480360381019061014391906114e7565b6106e7565b005b610164600480360381019061015f9190611455565b610807565b005b34801561017257600080fd5b5061018d60048036038101906101889190611455565b61084c565b60405161019a9190611650565b60405180910390f35b3480156101af57600080fd5b506101ca60048036038101906101c59190611672565b6109d3565b6040516101d79190611705565b60405180910390f35b3480156101ec57600080fd5b5061020760048036038101906102029190611727565b610ac5565b6040516102149190611705565b60405180910390f35b34801561022957600080fd5b50610244600480360381019061023f91906114e7565b610bd8565b005b600061025182610eb1565b90506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546102ec90611783565b80601f016020809104026020016040519081016040528092919081815260200182805461031890611783565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081526020016001820154815250509050600081600001515114156103ba576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600061044791906111a0565b6001820160009055505050505050565b60008061046383610eb1565b90506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546104fe90611783565b80601f016020809104026020016040519081016040528092919081815260200182805461052a90611783565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050815260200160018201548152505090506000816000015151119250505092915050565b6000806105ab83610eb1565b90506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201805461064690611783565b80601f016020809104026020016040519081016040528092919081815260200182805461067290611783565b80156106bf5780601f10610694576101008083540402835291602001916106bf565b820191906000526020600020905b8154815290600101906020018083116106a257829003601f168201915b5050505050815260200160018201548152505090506000816000015151119250505092915050565b6106f081610f65565b610726576040517f4cd3f55000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061073183610eb1565b9050600060405180604001604052808481526020016103e84261075491906117e4565b815250905080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906107f29291906111e0565b50602082015181600101559050505050505050565b600061081283610ac5565b905081600282604051610825919061187a565b908152602001604051809103902090805190602001906108469291906111e0565b50505050565b610854611266565b600061085f83610eb1565b90506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546108fa90611783565b80601f016020809104026020016040519081016040528092919081815260200182805461092690611783565b80156109735780601f1061094857610100808354040283529160200191610973565b820191906000526020600020905b81548152906001019060200180831161095657829003601f168201915b505050505081526020016001820154815250509050600081600001515114156109c8576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b809250505092915050565b606060006002836040516109e7919061187a565b90815260200160405180910390208054610a0090611783565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2c90611783565b8015610a795780601f10610a4e57610100808354040283529160200191610a79565b820191906000526020600020905b815481529060010190602001808311610a5c57829003601f168201915b50505050509050600081511415610abc576040517f85b0bad200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610b1390611783565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3f90611783565b8015610b8c5780601f10610b6157610100808354040283529160200191610b8c565b820191906000526020600020905b815481529060010190602001808311610b6f57829003601f168201915b50505050509050600081511415610bcf576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b610be182610f81565b610c17576040517ff93d5b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610c6390611783565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8f90611783565b8015610cdc5780601f10610cb157610100808354040283529160200191610cdc565b820191906000526020600020905b815481529060010190602001808311610cbf57829003601f168201915b505050505090506000815114610d1e576040517f7eb8190b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008084604051610d2f919061187a565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610dc6576040517f2435647e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600085604051610dd7919061187a565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610e769291906111e0565b5082600285604051610e88919061187a565b90815260200160405180910390209080519060200190610ea99291906111e0565b505050505050565b600080600083604051610ec4919061187a565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f5c576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6000808251118015610f7a5750610400825111155b9050919050565b60008082905061010081511180610f99575060048151105b15610fa857600091505061119b565b6000805b8251811015611194576000838281518110610fca57610fc9611891565b5b602001015160f81c60f81b9050603060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156110335750603960f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1580156110995750604160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156110975750605a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b80156110fe5750606160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156110fc5750607a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b80156111305750605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561114257600094505050505061119b565b605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158015611176575082155b1561118057600192505b50808061118c906118c0565b915050610fac565b5080925050505b919050565b5080546111ac90611783565b6000825580601f106111be57506111dd565b601f0160209004906000526020600020908101906111dc9190611280565b5b50565b8280546111ec90611783565b90600052602060002090601f01602090048101928261120e5760008555611255565b82601f1061122757805160ff1916838001178555611255565b82800160010185558215611255579182015b82811115611254578251825591602001919060010190611239565b5b5090506112629190611280565b5090565b604051806040016040528060608152602001600081525090565b5b80821115611299576000816000905550600101611281565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112dc826112b1565b9050919050565b6112ec816112d1565b81146112f757600080fd5b50565b600081359050611309816112e3565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61136282611319565b810181811067ffffffffffffffff821117156113815761138061132a565b5b80604052505050565b600061139461129d565b90506113a08282611359565b919050565b600067ffffffffffffffff8211156113c0576113bf61132a565b5b6113c982611319565b9050602081019050919050565b82818337600083830152505050565b60006113f86113f3846113a5565b61138a565b90508281526020810184848401111561141457611413611314565b5b61141f8482856113d6565b509392505050565b600082601f83011261143c5761143b61130f565b5b813561144c8482602086016113e5565b91505092915050565b6000806040838503121561146c5761146b6112a7565b5b600061147a858286016112fa565b925050602083013567ffffffffffffffff81111561149b5761149a6112ac565b5b6114a785828601611427565b9150509250929050565b60008115159050919050565b6114c6816114b1565b82525050565b60006020820190506114e160008301846114bd565b92915050565b600080600060608486031215611500576114ff6112a7565b5b600061150e868287016112fa565b935050602084013567ffffffffffffffff81111561152f5761152e6112ac565b5b61153b86828701611427565b925050604084013567ffffffffffffffff81111561155c5761155b6112ac565b5b61156886828701611427565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156115ac578082015181840152602081019050611591565b838111156115bb576000848401525b50505050565b60006115cc82611572565b6115d6818561157d565b93506115e681856020860161158e565b6115ef81611319565b840191505092915050565b6000819050919050565b61160d816115fa565b82525050565b6000604083016000830151848203600086015261163082826115c1565b91505060208301516116456020860182611604565b508091505092915050565b6000602082019050818103600083015261166a8184611613565b905092915050565b600060208284031215611688576116876112a7565b5b600082013567ffffffffffffffff8111156116a6576116a56112ac565b5b6116b284828501611427565b91505092915050565b600082825260208201905092915050565b60006116d782611572565b6116e181856116bb565b93506116f181856020860161158e565b6116fa81611319565b840191505092915050565b6000602082019050818103600083015261171f81846116cc565b905092915050565b60006020828403121561173d5761173c6112a7565b5b600061174b848285016112fa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061179b57607f821691505b602082108114156117af576117ae611754565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117ef826115fa565b91506117fa836115fa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611833576118326117b5565b5b828202905092915050565b600081905092915050565b600061185482611572565b61185e818561183e565b935061186e81856020860161158e565b80840191505092915050565b60006118868284611849565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006118cb826115fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118fe576118fd6117b5565b5b60018201905091905056fea2646970667358221220fa4d192158026e0380279822b42c657ebc18748b51f2e3573deb2ad08aba7cbb64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 25,
        "contract": "contracts/MessageRelay.sol:MessageRelay",
        "label": "usernameToAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 29,
        "contract": "contracts/MessageRelay.sol:MessageRelay",
        "label": "addressToUsername",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 33,
        "contract": "contracts/MessageRelay.sol:MessageRelay",
        "label": "usernameToPublicKey",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/MessageRelay.sol:MessageRelay",
        "label": "userAddressToMessage",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Message)21_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(Message)21_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct MessageRelay.Message))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Message)21_storage)"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(Message)21_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct MessageRelay.Message)",
        "numberOfBytes": "32",
        "value": "t_struct(Message)21_storage"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Message)21_storage": {
        "encoding": "inplace",
        "label": "struct MessageRelay.Message",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/MessageRelay.sol:MessageRelay",
            "label": "content",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 20,
            "contract": "contracts/MessageRelay.sol:MessageRelay",
            "label": "createdAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}